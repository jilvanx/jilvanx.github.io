{"version":3,"sources":["webpack:///./src/components/Title.js","webpack:///./src/pages/stack.js"],"names":["Title","children","theme","useTheme","state","useContext","Context","className","isDark","css","dark","font","light","propTypes","PropType","node","isRequired","Stack","console","log","process","Layout","title","keywords","async","src","charset","frameBorder","data-theme","data-layers","data-stack-embed","href"],"mappings":"mPAQA,MAAMA,EAAQ,EAAGC,eACf,MAAMC,EAAQC,eACR,MAAEC,GAAUC,qBAAWC,KAE7B,OACE,8BACE,mBAAKC,UAAY,2BAA0BH,EAAMI,OAAS,iBAAmB,mBAC3E,sBAAKP,GACL,kBACEQ,IAAKA,YAAF,gDAGmBL,EAAMI,OAASN,EAAMQ,KAAKC,KAAOT,EAAMU,MAAMD,KAHhE,UAWbX,EAAMa,UAAY,CAChBZ,SAAUa,IAASC,KAAKC,YAGXhB,Q,wBCvBA,SAASiB,IACtB,MAAM,MAAEb,GAAUC,qBAAWC,KAI7B,OAFAY,QAAQC,IAAI,QAASC,kBAGnB,YAACC,EAAA,EAAD,KACE,YAAC,IAAD,CACEC,MAAM,QACNC,SAAS,mDAEX,YAAC,IAAD,KACE,sBACEC,OAAK,EACLC,IAAI,wDACJC,QAAQ,WAGZ,uBAASnB,UAAU,6CACjB,YAAC,EAAD,cACA,mBAAKA,UAAY,qBAAoBH,EAAMI,OAAS,iBAAmB,mBACrE,iBAAGD,UAAU,WAAb,mGAIA,iBAAGA,UAAU,WAAb,mCACA,mBAAKA,UAAU,uBACb,mBAAKA,UAAU,kBACb,iBACEoB,YAAY,IACZC,aAAW,QACXC,cAAY,UACZC,mBAAiB,OACjBC,KAAK,2EALP","file":"component---src-pages-stack-js-e07d1f223b00d1bac4a1.js","sourcesContent":["import React, { useContext } from 'react';\nimport PropType from 'prop-types';\nimport { css } from '@emotion/core';\n\nimport { useTheme } from 'emotion-theming';\n\nimport Context from '../store/context';\n\nconst Title = ({ children }) => {\n  const theme = useTheme();\n  const { state } = useContext(Context);\n\n  return (\n    <>\n      <div className={`title has-text-centered ${state.isDark ? 'has-text-light' : 'has-text-dark'}`}>\n        <h1>{children}</h1>\n        <hr\n          css={css`\n            width: 80px;\n            margin: 32px auto;\n            border: 1px solid ${state.isDark ? theme.dark.font : theme.light.font};\n          `}\n        />\n      </div>\n    </>\n  );\n};\n\nTitle.propTypes = {\n  children: PropType.node.isRequired,\n};\n\nexport default Title;\n","import React, { useContext } from 'react';\nimport Helmet from 'react-helmet';\n\nimport Title from '../components/Title';\nimport Layout from '../components/Layout';\nimport SEO from '../components/Seo';\n\nimport Context from '../store/context';\n\nexport default function Stack() {\n  const { state } = useContext(Context);\n\n  console.log('GA ->', process.env.GATSBY_GA_TRACKING_ID);\n\n  return (\n    <Layout>\n      <SEO\n        title=\"Stack\"\n        keywords=\"React, Node, Gatsby, Front-end, developer, API\"\n      />\n      <Helmet>\n        <script\n          async\n          src=\"https://cdn1.stackshare.io/javascripts/client-code.js\"\n          charset=\"utf-8\"\n        />\n      </Helmet>\n      <section className=\"section is-size-4-desktop is-size-5-touch\">\n        <Title>Stack</Title>\n        <div className={`has-text-centered ${state.isDark ? 'has-text-light' : 'has-text-dark'}`}>\n          <p className=\"content\">\n            I have experience with many modern tools,\n            I select them for my projects depending on the usage.\n          </p>\n          <p className=\"content\">Here is my stack on StackShare:</p>\n          <div className=\"columns is-centered\">\n            <div className=\"column is-half\">\n              <a\n                frameBorder=\"0\"\n                data-theme=\"light\"\n                data-layers=\"1,2,3,4\"\n                data-stack-embed=\"true\"\n                href=\"https://embed.stackshare.io/stacks/embed/60289aae9fcafd619f2be8fc0e15d6\"\n              >\n                StackShare\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  );\n}\n"],"sourceRoot":""}